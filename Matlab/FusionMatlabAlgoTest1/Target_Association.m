function [x0,y0,z0,dmax]=Target_Association(x,y,z,phi,theta)

m = cos(theta);
n = sin(theta);
p = sin(phi);
l = [m n p];
l1 = l(1,:);%直线一的斜率
l2 = l(2,:);%直线二的斜率
l3 = l(3,:);%直线三的斜率
s1 = cross(l1,l2);
d1 = -s1(1,1)*x(1,1)-s1(1,2)*y(1,1)-s1(1,3)*z(1,1);%求出A1X+B1Y+C1Z+D11的D11
r1 = abs(s1(1,1)*x(2,1)+s1(1,2)*y(2,1)+s1(1,3)*z(2,1)+d1)/((s1(1,1)^2+s1(1,2)^2+s1(1,3)^2)^0.5);
s2 = cross(l2,s1);
d2 = -s2(1,1)*x(2,1)-s2(1,2)*y(2,1)-s2(1,3)*z(2,1);
syms t1;
t1 = solve(s2(1,1)*(x(1,1)+m(1,1)*t1)+s2(1,2)*(y(1,1)+n(1,1)*t1)+s2(1,3)*(z(1,1)+p(1,1)*t1)+d2);
x11 = x(1,1)+m(1,1)*t1;
y11 = y(1,1)+n(1,1)*t1;
z11 = z(1,1)+p(1,1)*t1;
v1 = [x11 y11 z11];%第一个垂足的坐标
s11 = cross(l1,s1);
d11 = -s11(1,1)*x(1,1)-s11(1,2)*y(1,1)-s11(1,3)*z(1,1);
syms t2;
t2 = solve(s11(1,1)*(x(2,1)+m(2,1)*t2)+s11(1,2)*(y(2,1)+n(2,1)*t2)+s11(1,3)*(z(2,1)+p(2,1)*t2)+d11);
x21 = x(2,1)+m(2,1)*t2;
y21 = y(2,1)+n(2,1)*t2;
z21 = z(2,1)+p(2,1)*t2;
v2 = [x21 y21 z21];%第二个垂足的坐标
syms t3;
t3 = solve(m(3,1)*(x21-x(3,1)-m(3,1)*t3)+n(3,1)*(y21-y(3,1)-n(3,1)*t3)+p(3,1)*(z21-z(3,1)-p(3,1)*t3));
x31 = x(3,1)+m(3,1)*t3;
y31 = y(3,1)+n(3,1)*t3;
z31 = z(3,1)+p(3,1)*t3;
v3 = [x31 y31 z31];%过第二个垂足作第三条直线的垂线得到垂点
% l12 = [x11-x21 y11-y21 z11-z21];
% l13 = [x11-x31 y11-y31 z11-z31];
% l23 = [x21-x31 y21-y31 z21-z31];
% ls = cross(l12,l13);
% x12 = 0.5*(x11+x21);
% y12 = 0.5*(y11+y21);
% z12 = 0.5*(z11+z21);
% vector1 = cross(l12,ls);
% x13 = 0.5*(x11+x31);
% y13 = 0.5*(y11+y31);
% z13 = 0.5*(z11+z31);
% vector2 = cross(l13,ls);
% syms t4 t5;
% f = solve(x12+vector1(1,1)*t4-x13-vector2(1,1)*t5,y12+vector1(1,2)*t4-y13-vector2(1,2)*t5);
% x0 = double(x12+v1(1,1)*f.t4);
% y0 = double(y12+v1(1,2)*f.t4);
% z0 = double(z12+v1(1,3)*f.t4);
x0 = double((x11+x21+x31)/3);
y0 = double((y11+y21+y31)/3);
z0 = double((z11+z21+z31)/3);

% r = double(((x11-x0)^2+(y11-y0)^2+(z11-z0)^2)^0.5);
distance(1,1) = double(((x11-x21)^2+(y11-y21)^2+(z11-z21)^2)^0.5);
distance(2,1) = double(((x11-x31)^2+(y11-y31)^2+(z11-z31)^2)^0.5);
distance(3,1) = double(((x21-x31)^2+(y21-y31)^2+(z21-z31)^2)^0.5);
dmax = max(distance);